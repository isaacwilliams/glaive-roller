{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["roll","size","Math","floor","random","rollDice","numberOfDice","sides","sum","times","rollStat","bonus","stat","formatStatBonus","concat","formatBonus","pick","array","length","csvParser","options","arguments","undefined","columns","cast","input","Promise","resolve","reject","parse","err","output","fetchCsvData","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","url","data","text","parsedData","wrap","_context","prev","next","fetch","sent","abrupt","stop","this","_x","apply","fetchData","_ref2","_callee2","_ref3","_ref4","backgrounds","startingGear","debtholders","names","_context2","all","slicedToArray","splitRegExp","App","state","loaded","name","items","failedCareer","stats","str","dex","con","int","wis","cha","_this2","then","_ref9","console","log","equipRoll1","equipRoll2","equipRoll3","equipRoll4","career","setState","_Object$entries$reduc","entries","reduce","_ref5","_ref6","_ref7","accKey","accValue","_ref8","key","value","Infinity","_Object$entries$reduc2","lowestStatKey","lowestStatValue","max","rollStats","givenName","familyName","selectName","toConsumableArray","r1","r2","r3","r4","split","selectEquipment","debt","holder","owed","_this$state","react_default","createElement","className","isSpecialAbility","startsWith","specialAbility","filter","map","item","replace","invetoryItems","negate","i","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7c1c8992.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport parse from 'csv-parse';\nimport { sum, times, startsWith, negate } from 'lodash/fp';\nimport './App.css';\n\nconst BACKGROUNDS = 'https://docs.google.com/spreadsheets/d/e' +\n    '/2PACX-1vQ-Gk5zIkpo2A9AwhSQKnCEprv-g2vk7vHP8qWxJFm-c6osL00jvjtR8gsCbxwlthulAJh3f5mXqSPk/pub?gid=153117320&single=true&output=csv';\nconst STARTING_GEAR = 'https://docs.google.com/spreadsheets/d/e' +\n    '/2PACX-1vQ-Gk5zIkpo2A9AwhSQKnCEprv-g2vk7vHP8qWxJFm-c6osL00jvjtR8gsCbxwlthulAJh3f5mXqSPk/pub?gid=1613277797&single=true&output=csv';\nconst DEBTHOLDERS = 'https://docs.google.com/spreadsheets/d/e' +\n    '/2PACX-1vQ-Gk5zIkpo2A9AwhSQKnCEprv-g2vk7vHP8qWxJFm-c6osL00jvjtR8gsCbxwlthulAJh3f5mXqSPk/pub?gid=828688644&single=true&output=csv';\nconst NAMES = 'https://docs.google.com/spreadsheets/d/e' +\n    '/2PACX-1vQ-Gk5zIkpo2A9AwhSQKnCEprv-g2vk7vHP8qWxJFm-c6osL00jvjtR8gsCbxwlthulAJh3f5mXqSPk/pub?gid=674498928&single=true&output=csv';\n\nconst roll = (size) => Math.floor(Math.random() * size) + 1;\nconst rollDice = (numberOfDice) => (sides) => sum(times(() => roll(sides), numberOfDice))\n\nconst rollStat = () => rollDice(2)(6) + 3;\nconst bonus = (stat) => Math.floor(stat / 3) - 3;\n\nconst formatBonus = (bonus) => {\n    if (bonus >= 0) return `+${bonus}`;\n    return `${bonus}`;\n}\n\nconst formatStatBonus = (stat) => formatBonus(bonus(stat));\n\nconst pick = (array) => (\n    array[Math.floor(Math.random() * array.length)]\n);\n\nconst csvParser = (options = { columns: true, cast: true }) => (input) => new Promise((resolve, reject) => {\n    parse(input, options, (err, output) => {\n        if (err) return reject(err);\n        resolve(output);\n    });\n});\n\nconst fetchCsvData = async (url) => {\n    const data = await fetch(url);\n    const text = await data.text();\n    const parsedData = await csvParser()(text);\n\n    return parsedData\n}\n\nconst fetchData = async () => {\n    const [backgrounds, startingGear, debtholders, names] = await Promise.all([\n        fetchCsvData(BACKGROUNDS),\n        fetchCsvData(STARTING_GEAR),\n        fetchCsvData(DEBTHOLDERS),\n        fetchCsvData(NAMES)\n    ]);\n\n    return {\n        backgrounds,\n        startingGear,\n        debtholders,\n        names,\n    }\n}\n\nconst splitRegExp = /(?![^)(]*\\([^)(]*?\\)\\)),(?![^\\(]*\\))/;\n\nconst selectEquipment = (startingGear) => (r1, r2, r3, r4) => ([\n    ...startingGear[r1 - 1]['Weapon'].split(splitRegExp),\n    ...startingGear[r2 - 1]['Armour'].split(splitRegExp),\n    ...startingGear[r3 - 1]['Item'].split(splitRegExp),\n    `${r4} pennies`,\n]);\n\nconst selectName = (names) => {\n    let givenName = pick(names)['Given name'];\n    if (givenName === '[Roll on surnames]') {\n        givenName = pick(names)['Surname']\n        console.log('picked from surname', givenName);\n    }\n\n    let familyName = pick(names)['Surname'];\n    if (familyName === '[Roll on given names]') {\n        familyName = pick(names)['Given name']\n        console.log('picked from given', familyName);\n    }\n\n    return `${givenName} ${familyName}`;\n};\n\nconst rollStats = () => {\n    const stats = {\n        str: rollStat(),\n        dex: rollStat(),\n        con: rollStat(),\n        int: rollStat(),\n        wis: rollStat(),\n        cha: rollStat(),\n    };\n\n    const [lowestStatKey, lowestStatValue] = Object.entries(stats).reduce(([accKey, accValue], [key, value]) => {\n        if (value < accValue) {\n            return [key, value];\n        }\n\n        return [accKey, accValue];\n    }, ['', Infinity]);\n\n\n    stats[lowestStatKey] = Math.max(lowestStatValue, rollStat());\n\n    return stats;\n};\n\nclass App extends Component {\n    state = {\n        loaded: false,\n        name: '',\n        items: [],\n        failedCareer: null,\n        stats: { str: 10, dex: 10, con: 10, int: 10, wis: 10, cha: 10 },\n    }\n\n    componentDidMount() {\n        fetchData().then(({ backgrounds, startingGear, names, debtholders }) => {\n            console.log(backgrounds, startingGear);\n\n            const equipRoll1 = roll(10);\n            const equipRoll2 = roll(10);\n            const equipRoll3 = roll(10);\n            const equipRoll4 = roll(10);\n\n            const career = pick(backgrounds);\n\n            this.setState({\n                loaded: true,\n                stats: rollStats(),\n                name: selectName(names),\n                failedCareer: career['Failed career'],\n                items: [\n                    career['Item 1'],\n                    career['Item 2'],\n                    '------',\n                    'Torches',\n                    'Box of matches',\n                    'Rations',\n                    'Rations',\n                    '------',\n                    `Equipment rolls: ${equipRoll1}, ${equipRoll2}, ${equipRoll3}, ${equipRoll4}`,\n                    '------',\n                    ...selectEquipment(startingGear)(equipRoll1, equipRoll2, equipRoll3, equipRoll4),\n                ],\n                debt: {\n                    holder: pick(debtholders),\n                    owed: (rollDice(1)(6) + 6) * 10,\n                }\n            });\n        });\n    }\n\n    render() {\n        const { loaded, items, failedCareer, name, stats, debt } = this.state;\n\n        if (!loaded) {\n            return (\n                <div className=\"App\">\n                    <h1>Loading...</h1>\n                </div>\n            )\n        }\n\n        const isSpecialAbility = startsWith('Special:');\n\n        const specialAbility = items\n            .filter(isSpecialAbility)\n            .map((item) => item.replace('Special:', ''))[0];\n\n        const invetoryItems = items.filter(negate(isSpecialAbility))\n\n        return (\n            <div className=\"App\">\n\n                <div className=\"character\">\n                    <h1>{name}</h1>\n                    <p>Failed career: <strong>{failedCareer}</strong></p>\n\n                    {specialAbility && (\n                        <p>Special: <strong>{specialAbility}</strong></p>\n                    )}\n\n                    <p>\n                        Debt: owes <strong>£{debt.owed}</strong> to a <strong>{debt.holder['Debt-holder']}</strong>\n                        <span className=\"detail\"> - {debt.holder['Debt-holder detail']}</span>\n                    </p>\n                </div>\n\n                <div className=\"character-stats\">\n                    <div className=\"character-stats-col\">\n                        <h3>Stats</h3>\n\n                        <ul>\n                            <li>Str: {stats.str} ({formatStatBonus(stats.str)})</li>\n                            <li>Dex: {stats.dex} ({formatStatBonus(stats.dex)})</li>\n                            <li>Con: {stats.con} ({formatStatBonus(stats.con)})</li>\n                            <li>Int: {stats.int} ({formatStatBonus(stats.int)})</li>\n                            <li>Wis: {stats.wis} ({formatStatBonus(stats.wis)})</li>\n                            <li>Cha: {stats.cha} ({formatStatBonus(stats.cha)})</li>\n                        </ul>\n\n                        <ul>\n                            <li>Attack: 11</li>\n                            <li>HP: {stats.con - 4}</li>\n                            <li>Move: {12 + bonus(stats.dex)}</li>\n                            <li>Stealth: {5 + bonus(stats.dex)}</li>\n                            <li>Initiative: {stats.wis}</li>\n                            <li>Save: {6 + bonus(stats.dex)}</li>\n                        </ul>\n                    </div>\n\n                    <div className=\"character-stat-col\">\n\n                        <h3>Gear</h3>\n                        <p>Inventory slots: {stats.str}</p>\n\n                        <ul>\n                            {invetoryItems.map((item, i) => (\n                                <li key={i}>{item}</li>\n                            ))}\n                        </ul>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}
{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["roll","size","Math","floor","random","rollDice","numberOfDice","sides","sum","times","rollStat","rollKnaveStat","min","bonus","stat","formatStatBonus","concat","formatBonus","pick","array","length","csvParser","options","arguments","undefined","columns","cast","input","Promise","resolve","reject","parse","err","output","fetchCsvData","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","url","data","text","parsedData","wrap","_context","prev","next","fetch","sent","abrupt","stop","this","_x","apply","fetchData","_ref2","_callee2","_ref3","_ref4","backgrounds","startingGear","debtholders","names","_context2","all","slicedToArray","splitRegExp","App","state","loaded","statType","_this2","setState","showKnaveStats","window","location","hash","indexOf","then","_ref9","rollCharacter","_this$state","equipRoll1","equipRoll2","equipRoll3","equipRoll4","career","character","stats","str","dex","con","int","wis","cha","_Object$entries$reduc","entries","reduce","_ref5","_ref6","_ref7","accKey","accValue","_ref8","key","value","Infinity","_Object$entries$reduc2","lowestStatKey","lowestStatValue","max","rollStats","knaveHp","name","givenName","console","log","familyName","selectName","failedCareer","items","toConsumableArray","r1","r2","r3","r4","split","selectEquipment","debt","holder","owed","toStatType","_this3","_this$state2","react_default","createElement","className","isSpecialAbility","startsWith","specialAbility","filter","map","item","replace","invetoryItems","negate","onClick","switchStatType","i","Component","Boolean","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.9ac6f8b8.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport parse from 'csv-parse';\nimport { sum, times, startsWith, negate, min } from 'lodash/fp';\nimport './App.css';\n\nconst BACKGROUNDS = 'https://docs.google.com/spreadsheets/d/e' +\n    '/2PACX-1vQ-Gk5zIkpo2A9AwhSQKnCEprv-g2vk7vHP8qWxJFm-c6osL00jvjtR8gsCbxwlthulAJh3f5mXqSPk/pub?gid=153117320&single=true&output=csv';\nconst STARTING_GEAR = 'https://docs.google.com/spreadsheets/d/e' +\n    '/2PACX-1vQ-Gk5zIkpo2A9AwhSQKnCEprv-g2vk7vHP8qWxJFm-c6osL00jvjtR8gsCbxwlthulAJh3f5mXqSPk/pub?gid=1613277797&single=true&output=csv';\nconst DEBTHOLDERS = 'https://docs.google.com/spreadsheets/d/e' +\n    '/2PACX-1vQ-Gk5zIkpo2A9AwhSQKnCEprv-g2vk7vHP8qWxJFm-c6osL00jvjtR8gsCbxwlthulAJh3f5mXqSPk/pub?gid=828688644&single=true&output=csv';\nconst NAMES = 'https://docs.google.com/spreadsheets/d/e' +\n    '/2PACX-1vQ-Gk5zIkpo2A9AwhSQKnCEprv-g2vk7vHP8qWxJFm-c6osL00jvjtR8gsCbxwlthulAJh3f5mXqSPk/pub?gid=674498928&single=true&output=csv';\n\nconst roll = (size) => Math.floor(Math.random() * size) + 1;\nconst rollDice = (numberOfDice) => (sides) => sum(times(() => roll(sides), numberOfDice))\n\nconst rollStat = () => rollDice(2)(6) + 3;\nconst rollKnaveStat = () => min(times(() => roll(3), 3));\n\n\nconst bonus = (stat) => Math.floor(stat / 3) - 3;\n\nconst formatBonus = (bonus) => {\n    if (bonus >= 0) return `+${bonus}`;\n    return `${bonus}`;\n}\n\nconst formatStatBonus = (stat) => formatBonus(bonus(stat));\n\nconst pick = (array) => (\n    array[Math.floor(Math.random() * array.length)]\n);\n\nconst csvParser = (options = { columns: true, cast: true }) => (input) => new Promise((resolve, reject) => {\n    parse(input, options, (err, output) => {\n        if (err) return reject(err);\n        resolve(output);\n    });\n});\n\nconst fetchCsvData = async (url) => {\n    const data = await fetch(url);\n    const text = await data.text();\n    const parsedData = await csvParser()(text);\n\n    return parsedData\n}\n\nconst fetchData = async () => {\n    const [backgrounds, startingGear, debtholders, names] = await Promise.all([\n        fetchCsvData(BACKGROUNDS),\n        fetchCsvData(STARTING_GEAR),\n        fetchCsvData(DEBTHOLDERS),\n        fetchCsvData(NAMES)\n    ]);\n\n    return {\n        backgrounds,\n        startingGear,\n        debtholders,\n        names,\n    }\n}\n\nconst splitRegExp = /(?![^)(]*\\([^)(]*?\\)\\)),(?![^\\(]*\\))/;\n\nconst selectEquipment = (startingGear) => (r1, r2, r3, r4) => ([\n    ...startingGear[r1 - 1]['Weapon'].split(splitRegExp),\n    ...startingGear[r2 - 1]['Armour'].split(splitRegExp),\n    ...startingGear[r3 - 1]['Item'].split(splitRegExp),\n    `${r4} pennies`,\n]);\n\nconst selectName = (names) => {\n    let givenName = pick(names)['Given name'];\n    if (givenName === '[Roll on surnames]') {\n        givenName = pick(names)['Surname']\n        console.log('picked from surname', givenName);\n    }\n\n    let familyName = pick(names)['Surname'];\n    if (familyName === '[Roll on given names]') {\n        familyName = pick(names)['Given name']\n        console.log('picked from given', familyName);\n    }\n\n    return `${givenName} ${familyName}`;\n};\n\nconst rollStats = () => {\n    const stats = {\n        str: rollStat(),\n        dex: rollStat(),\n        con: rollStat(),\n        int: rollStat(),\n        wis: rollStat(),\n        cha: rollStat(),\n    };\n\n    const [lowestStatKey, lowestStatValue] = Object.entries(stats).reduce(([accKey, accValue], [key, value]) => {\n        if (value < accValue) {\n            return [key, value];\n        }\n\n        return [accKey, accValue];\n    }, ['', Infinity]);\n\n\n    stats[lowestStatKey] = Math.max(lowestStatValue, rollStat());\n\n    return stats;\n};\n\nconst rollKnaveStats = () => ({\n    str: rollKnaveStat(),\n    dex: rollKnaveStat(),\n    con: rollKnaveStat(),\n    int: rollKnaveStat(),\n    wis: rollKnaveStat(),\n    cha: rollKnaveStat(),\n})\n\nclass App extends Component {\n    state = {\n        loaded: false,\n        statType: 'glog',\n    }\n\n    componentDidMount() {\n        this.setState({ showKnaveStats: window.location.hash.indexOf('knave') > 0 })\n\n        fetchData().then(({ backgrounds, startingGear, names, debtholders }) => {\n            this.setState({ loaded: true, backgrounds, startingGear, names, debtholders });\n            this.rollCharacter(this.state.statType);\n        });\n    }\n\n    rollCharacter(statType) {\n        const { backgrounds, startingGear, names, debtholders } = this.state;\n\n        const equipRoll1 = roll(10);\n        const equipRoll2 = roll(10);\n        const equipRoll3 = roll(10);\n        const equipRoll4 = roll(10);\n\n        const career = pick(backgrounds);\n\n        const stats = statType === 'knave' ? rollKnaveStats() : rollStats();\n\n        const character = {\n            statType,\n            stats: stats,\n            knaveHp: roll(8),\n            name: selectName(names),\n            failedCareer: career['Failed career'],\n            items: [\n                career['Item 1'],\n                career['Item 2'],\n                '------',\n                'Torches',\n                'Box of matches',\n                'Rations',\n                '------',\n                `Equipment rolls: ${equipRoll1}, ${equipRoll2}, ${equipRoll3}, ${equipRoll4}`,\n                '------',\n                ...selectEquipment(startingGear)(equipRoll1, equipRoll2, equipRoll3, equipRoll4),\n            ],\n            debt: {\n                holder: pick(debtholders),\n                owed: (rollDice(2)(6) + 3) * 10,\n            }\n        }\n\n        this.setState({ character });\n    }\n\n    switchStatType(toStatType) {\n        this.setState({ statType: toStatType });\n        this.rollCharacter(toStatType);\n    }\n\n    render() {\n        const { loaded, character } = this.state;\n\n        if (!loaded || !character) {\n            return (\n                <div className=\"App\">\n                    <h1>Loading...</h1>\n                </div>\n            )\n        }\n\n        const { items, failedCareer, name, stats, statType, debt } = character;\n\n        const isSpecialAbility = startsWith('Special:');\n\n        const specialAbility = items\n            .filter(isSpecialAbility)\n            .map((item) => item.replace('Special:', ''))[0];\n\n        const invetoryItems = items.filter(negate(isSpecialAbility));\n\n        console.log(stats);\n\n        return (\n            <div className=\"App\">\n\n                <div className=\"character\">\n                    <div className=\"header\">\n                        <h1>{name}</h1>\n\n                        <div className=\"controls\">\n                            <button onClick={() => this.rollCharacter(statType)}>Roll again</button>\n                            {statType === 'knave' ?\n                                <button onClick={() => this.switchStatType('glog')}>Switch to GLOG stats</button> :\n                                <button onClick={() => this.switchStatType('knave')}>Switch to Knave stats</button>}\n                        </div>\n                    </div>\n\n                    <p>Failed career: <strong>{failedCareer}</strong></p>\n\n                    {specialAbility && (\n                        <p>Special: <strong>{specialAbility}</strong></p>\n                    )}\n\n                    <p>\n                        Debt: owes <strong>£{debt.owed}</strong> to a <strong>{debt.holder['Debt-holder']}</strong>\n                        <span className=\"detail\"> - {debt.holder['Debt-holder detail']}</span>\n                    </p>\n                </div>\n\n                <div className=\"character-stats\">\n                    {statType === 'knave' ? (\n                        <div className=\"character-stats-col\">\n                            <h3>Stats</h3>\n\n                            <ul>\n                                <li>Str: {stats.str} | {stats.str + 10}</li>\n                                <li>Dex: {stats.dex} | {stats.dex + 10}</li>\n                                <li>Con: {stats.con} | {stats.con + 10}</li>\n                                <li>Int: {stats.int} | {stats.int + 10}</li>\n                                <li>Wis: {stats.wis} | {stats.wis + 10}</li>\n                                <li>Cha: {stats.cha} | {stats.cha + 10}</li>\n                            </ul>\n\n                            <ul>\n                                <li>HP: {character.knaveHp}</li>\n                            </ul>\n                        </div>\n                    ) : (\n                        <div className=\"character-stats-col\">\n                            <h3>Stats</h3>\n\n                            <ul>\n                                <li>Str: {stats.str} ({formatStatBonus(stats.str)})</li>\n                                <li>Dex: {stats.dex} ({formatStatBonus(stats.dex)})</li>\n                                <li>Con: {stats.con} ({formatStatBonus(stats.con)})</li>\n                                <li>Int: {stats.int} ({formatStatBonus(stats.int)})</li>\n                                <li>Wis: {stats.wis} ({formatStatBonus(stats.wis)})</li>\n                                <li>Cha: {stats.cha} ({formatStatBonus(stats.cha)})</li>\n                            </ul>\n\n                            <ul>\n                                <li>Attack: 11</li>\n                                <li>HP: {stats.con - 4}</li>\n                                <li>Move: {12 + bonus(stats.dex)}</li>\n                                <li>Stealth: {5 + bonus(stats.dex)}</li>\n                                <li>Initiative: {stats.wis}</li>\n                                <li>Save: {6 + bonus(stats.dex)}</li>\n                            </ul>\n                        </div>\n                    )}\n\n\n                    <div className=\"character-stat-col\">\n\n                        <h3>Gear</h3>\n                        <p>Inventory slots: {statType === 'knave' ? stats.str + 10 : stats.str}</p>\n\n                        <ul>\n                            {invetoryItems.map((item, i) => (\n                                <li key={i}>{item}</li>\n                            ))}\n                        </ul>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}